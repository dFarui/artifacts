---
- name: Add LCM user to docker group
  become: yes
  register: group_result
  user:
    name: "{{ lcm_user }}"
    shell: /bin/bash
    groups: docker
    append: yes

# After adding the user to the docker group, we need to log out and in again to
# pick up the group membership. We do this by removing the SSH ControlPersist
# connection.

- name: Reset ssh connection
  meta: reset_connection
  when:
    - group_result is changed

- name: Configure docker parameters
  become: yes
  lineinfile:
    path: /etc/sysconfig/docker
    regexp: '^DOCKER_OPTS='
    line: 'DOCKER_OPTS="--exec-opt native.cgroupdriver=systemd"'
  notify: reload docker service

- name: Setup docker insecure registries
  vars:
    registries: ["{{ docker_registry }}"]
  set_fact:
    docker_config: "{{ docker_config | combine({'insecure-registries': registries}) }}"
  when: docker_registry_insecure | bool

- name: Setup docker cgroup parent
  vars:
    cgroup_parent: "{{ docker_cgroup_parent }}"
  set_fact:
    docker_config: "{{ docker_config | combine({'cgroup-parent': cgroup_parent}) }}"
  when: docker_cgroup_parent is not none

# Hardcoding the IPv6 CIDR for now, as it is not exposed outside the host as of now.
- name: Enable ipv6
  set_fact:
    docker_config: "{{ docker_config | combine({'ipv6': true, 'fixed-cidr-v6': '2001:db8:1::/64'}) }}"
  when: address_family is defined and address_family == 'ipv6'

- name: Merge custom docker config
  set_fact:
    docker_config: "{{ docker_config | combine(docker_custom_config) }}"

- name: Write docker config
  become: True
  copy:
    content: "{{ docker_config | to_nice_json }}"
    dest: /etc/docker/daemon.json
    mode: 0644
  notify: reload docker service

- name: Create docker.service override folder
  become: yes
  file:
    path: '{{ docker_override_path }}'
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Create docker.service override file
  become: yes
  copy:
    src: docker.service-override
    dest: '{{ docker_override_path }}/override.conf'
    owner: root
    group: root
    mode: 0644
  notify: reload docker service

- meta: flush_handlers

- name: Ensure docker is running
  become: yes
  systemd:
    state: started
    daemon_reload: yes
    name: docker

- name: Ensure the path for CA file for private registry exists
  file:
    path: "/etc/docker/certs.d/{{ docker_registry }}"
    state: directory
  become: yes
  when: docker_registry is not none and docker_registry_ca is not none

- name: Ensure the CA file for private registry exists
  copy:
    src: "{{ docker_registry_ca }}"
    dest: "/etc/docker/certs.d/{{ docker_registry }}/ca.crt"
  become: yes
  when: docker_registry is not none and docker_registry_ca is not none
  notify: reload docker service
