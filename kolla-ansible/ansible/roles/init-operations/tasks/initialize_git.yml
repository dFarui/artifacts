# Create an empty git repository.
---
- name: Check if the system already exists
  stat:
    path: "{{ git_repo }}"
  register: system_details

- fail:
    msg: The system "{{ system_name }}" already exists
  when: system_details.stat.exists

- name: Create git repository
  command: >
    git init {{ git_repo }}
  args:
    creates: "{{ git_repo }}/.git"

- name: Get username
  become: false
  local_action: command whoami
  register: username_on_the_host

- name: Git config settings for {{ username_on_the_host.stdout }}
  git_config:
    scope: global
    name: "{{ item.name }}"
    value: "{{ item.value }}"
  loop:
  - { name: "user.name", value: "CEE LCM user" }
  - { name: "user.email", value: "{{ username_on_the_host.stdout }}@{{ hostname_full }}" }
  - { name: "alias.co", value: "checkout" }
  - { name: "alias.ci", value: "commit" }
  - { name: "alias.br", value: "branch" }
  - { name: "alias.st", value: "status" }
  - { name: "color.branch", value: "never" }
  - { name: "color.pager", value: "false" }
  - { name: "color.diff", value: "false" }
  - { name: "color.status", value: "false" }

- name: Git config settings for root
  become: true
  git_config:
    scope: global
    name: "{{ item.name }}"
    value: "{{ item.value }}"
  loop:
  - { name: "user.name", value: "root" }
  - { name: "user.email", value: "root@{{ hostname_full }}" }
  - { name: "alias.co", value: "checkout" }
  - { name: "alias.ci", value: "commit" }
  - { name: "alias.br", value: "branch" }
  - { name: "alias.st", value: "status" }
  - { name: "color.branch", value: "never" }
  - { name: "color.pager", value: "false" }
  - { name: "color.diff", value: "false" }
  - { name: "color.status", value: "false" }

- name: Create initial branches
  shell: >
    if ! git rev-parse --verify {{ item }}; then
        git checkout --orphan {{ item }} &&
        git rm -rf --ignore-unmatch . &&
        touch .gitignore &&
        git add -A &&
        git commit -a -m "Initial commit on {{ item }}"
    fi
  args:
    chdir: "{{ git_repo }}"
  loop:
  - "{{ source_branch }}"

- name: Ensure system branch is checked out
  shell: >
    if git rev-parse --verify {{ system_branch | quote }} ; then
        git checkout {{ system_branch }}
    else
        git checkout {{ source_branch }} &&
        git checkout -b {{ system_branch }}
    fi
  args:
    chdir: "{{ git_repo }}"

- name: Create initial tags on branches
  include_role:
    name: git-operations
    tasks_from: tag_branches.yml
  vars:
    repo: "{{ git_repo }}"
    timestamp: "{{ initial_tag_timestamp }}"
    branches:
      - "{{ system_branch }}"
