---
- name: Looking up disks for Swift
  become: true
  command: docker exec -t kolla_toolbox ansible localhost
    -m find_disks
    -a "name={{ swift_devices_name }}
        match_mode={{ swift_devices_match_mode }}"
  register: swift_disk_lookup
  changed_when: swift_disk_lookup.stdout.find('localhost | SUCCESS => ') != -1 and
                    (swift_disk_lookup.stdout.split('localhost | SUCCESS => ')[1]|from_json).changed
  failed_when: swift_disk_lookup.stdout.split()[2] != 'SUCCESS'
  when: inventory_hostname in groups['swift-account-server'] or
        inventory_hostname in groups['swift-container-server'] or
        inventory_hostname in groups['swift-object-server']

- name: Reading data from variable
  set_fact:
    swift_disks: "{{ (swift_disk_lookup.stdout.split('localhost | SUCCESS => ')[1]|from_json).disks|from_json }}"
  when: inventory_hostname in groups['swift-account-server'] or
        inventory_hostname in groups['swift-container-server'] or
        inventory_hostname in groups['swift-object-server']

- name: Starting swift-rsyncd container
  become: true
  vars:
    service_name: "swift-rsyncd"
  kolla_docker:
    action: "start_container"
    common_options: "{{ docker_common_options }}"
    image: "{{ swift_rsyncd_image_full }}"
    name: "swift_rsyncd"
    volumes: "{{ swift_rsyncd_default_volumes + swift_rsyncd_extra_volumes }}"
    labels:
      service-component: "{{ service_name }}"
  when: inventory_hostname in groups['swift-account-server'] or
        inventory_hostname in groups['swift-container-server'] or
        inventory_hostname in groups['swift-object-server']

- name: Starting swift-account-server container
  become: true
  vars:
    service_name: "swift-account-server"
  kolla_docker:
    action: "start_container"
    common_options: "{{ docker_common_options }}"
    name: "swift_account_server"
    image: "{{ swift_account_image_full }}"
    volumes: "{{ swift_account_server_default_volumes + swift_account_server_extra_volumes }}"
    labels:
      service-component: "{{ service_name }}"
  when: inventory_hostname in groups['swift-account-server']

- name: Starting swift-account-auditor container
  become: true
  vars:
    service_name: "swift-account-auditor"
  kolla_docker:
    action: "start_container"
    common_options: "{{ docker_common_options }}"
    image: "{{ swift_account_image_full }}"
    name: "swift_account_auditor"
    volumes: "{{ swift_account_auditor_default_volumes + swift_account_auditor_extra_volumes }}"
    labels:
      service-component: "{{ service_name }}"
  when: inventory_hostname in groups['swift-account-server']

- name: Starting swift-account-replication-server container
  become: true
  vars:
    service_name: "swift-account-replication-server"
  kolla_docker:
    action: "start_container"
    common_options: "{{ docker_common_options }}"
    environment:
      RSYNC_CONNECT_PROG: "nc %H {{ swift_rsync_port }}"
    image: "{{ swift_account_image_full }}"
    name: "swift_account_replication_server"
    volumes: "{{ swift_account_replication_server_default_volumes + swift_account_replication_server_extra_volumes }}"
    labels:
      service-component: "{{ service_name }}"
  when:
    - inventory_hostname in groups['swift-account-server']
    - swift_has_replication_network

- name: Starting swift-account-replicator container
  become: true
  vars:
    service_name: "swift-account-replicator"
  kolla_docker:
    action: "start_container"
    common_options: "{{ docker_common_options }}"
    environment:
      RSYNC_CONNECT_PROG: "nc %H {{ swift_rsync_port }}"
    image: "{{ swift_account_image_full }}"
    name: "swift_account_replicator"
    volumes: "{{ swift_account_replicator_default_volumes + swift_account_replicator_extra_volumes }}"
    labels:
      service-component: "{{ service_name }}"
  when: inventory_hostname in groups['swift-account-server']

- name: Starting swift-account-reaper container
  become: true
  vars:
    service_name: "swift-account-reaper"
  kolla_docker:
    action: "start_container"
    common_options: "{{ docker_common_options }}"
    image: "{{ swift_account_image_full }}"
    name: "swift_account_reaper"
    volumes: "{{ swift_account_reaper_default_volumes + swift_account_reaper_extra_volumes }}"
    labels:
      service-component: "{{ service_name }}"
  when: inventory_hostname in groups['swift-account-server']

- name: Starting swift-container-server container
  become: true
  vars:
    service_name: "swift-container-server"
  kolla_docker:
    action: "start_container"
    common_options: "{{ docker_common_options }}"
    image: "{{ swift_container_image_full }}"
    name: "swift_container_server"
    volumes: "{{ swift_container_server_extra_volumes + swift_container_server_default_volumes }}"
    labels:
      service-component: "{{ service_name }}"
  when: inventory_hostname in groups['swift-container-server']

- name: Starting swift-container-auditor container
  become: true
  vars:
    service_name: "swift-container-auditor"
  kolla_docker:
    action: "start_container"
    common_options: "{{ docker_common_options }}"
    image: "{{ swift_container_image_full }}"
    name: "swift_container_auditor"
    volumes: "{{ swift_container_auditor_default_volumes + swift_container_auditor_extra_volumes }}"
    labels:
      service-component: "{{ service_name }}"
  when: inventory_hostname in groups['swift-container-server']

- name: Starting swift-container-replication-server container
  become: true
  vars:
    service_name: "swift-container-replication-server"
  kolla_docker:
    action: "start_container"
    common_options: "{{ docker_common_options }}"
    environment:
      RSYNC_CONNECT_PROG: "nc %H {{ swift_rsync_port }}"
    image: "{{ swift_container_image_full }}"
    name: "swift_container_replication_server"
    volumes: "{{ swift_container_replication_server_default_volumes + swift_container_replication_server_extra_volumes }}"
    labels:
      service-component: "{{ service_name }}"
  when:
    - inventory_hostname in groups['swift-container-server']
    - swift_has_replication_network

- name: Starting swift-container-replicator container
  become: true
  vars:
    service_name: "swift-container-replicator"
  kolla_docker:
    action: "start_container"
    common_options: "{{ docker_common_options }}"
    environment:
      RSYNC_CONNECT_PROG: "nc %H {{ swift_rsync_port }}"
    image: "{{ swift_container_image_full }}"
    name: "swift_container_replicator"
    volumes: "{{ swift_container_replicator_default_volumes + swift_container_replicator_extra_volumes }}"
    labels:
      service-component: "{{ service_name }}"
  when: inventory_hostname in groups['swift-container-server']

- name: Starting swift-container-updater container
  become: true
  vars:
    service_name: "swift-container-updater"
  kolla_docker:
    action: "start_container"
    common_options: "{{ docker_common_options }}"
    image: "{{ swift_container_image_full }}"
    name: "swift_container_updater"
    volumes: "{{ swift_container_updater_default_volumes + swift_container_updater_extra_volumes }}"
    labels:
      service-component: "{{ service_name }}"
  when: inventory_hostname in groups['swift-container-server']

- name: Starting swift-object-server container
  become: true
  vars:
    service_name: "swift-object-server"
  kolla_docker:
    action: "start_container"
    common_options: "{{ docker_common_options }}"
    image: "{{ swift_object_image_full }}"
    name: "swift_object_server"
    volumes: "{{ swift_object_server_default_volumes + swift_object_server_extra_volumes }}"
    labels:
      service-component: "{{ service_name }}"
  when: inventory_hostname in groups['swift-object-server']

- name: Starting swift-object-auditor container
  become: true
  vars:
    service_name: "swift-object-auditor"
  kolla_docker:
    action: "start_container"
    common_options: "{{ docker_common_options }}"
    image: "{{ swift_object_image_full }}"
    name: "swift_object_auditor"
    volumes: "{{ swift_object_auditor_default_volumes + swift_object_auditor_extra_volumes }}"
    labels:
      service-component: "{{ service_name }}"
  when: inventory_hostname in groups['swift-object-server']

- name: Starting swift-object-replication-server container
  become: true
  vars:
    service_name: "swift-object-replication-server"
  kolla_docker:
    action: "start_container"
    common_options: "{{ docker_common_options }}"
    environment:
      RSYNC_CONNECT_PROG: "nc %H {{ swift_rsync_port }}"
    image: "{{ swift_object_image_full }}"
    name: "swift_object_replication_server"
    volumes: "{{ swift_object_replication_server_default_volumes + swift_object_replication_server_extra_volumes }}"
    labels:
      service-component: "{{ service_name }}"
  when:
    - inventory_hostname in groups['swift-object-server']
    - swift_has_replication_network

- name: Starting swift-object-replicator container
  become: true
  vars:
    service_name: "swift-object-replicator"
  kolla_docker:
    action: "start_container"
    common_options: "{{ docker_common_options }}"
    environment:
      RSYNC_CONNECT_PROG: "nc %H {{ swift_rsync_port }}"
    image: "{{ swift_object_image_full }}"
    name: "swift_object_replicator"
    volumes: "{{ swift_object_replicator_default_volumes + swift_object_replicator_extra_volumes }}"
    labels:
      service-component: "{{ service_name }}"
  when: inventory_hostname in groups['swift-object-server']

- name: Starting swift-object-updater container
  become: true
  vars:
    service_name: "swift-object-updater"
  kolla_docker:
    action: "start_container"
    common_options: "{{ docker_common_options }}"
    image: "{{ swift_object_image_full }}"
    name: "swift_object_updater"
    volumes: "{{ swift_object_updater_default_volumes + swift_object_updater_extra_volumes }}"
    labels:
      service-component: "{{ service_name }}"
  when: inventory_hostname in groups['swift-object-server']

- name: Starting swift-object-expirer container
  become: true
  vars:
    service_name: "swift-object-expirer"
  kolla_docker:
    action: "start_container"
    common_options: "{{ docker_common_options }}"
    image: "{{ swift_object_expirer_image_full }}"
    name: "swift_object_expirer"
    volumes: "{{ swift_object_expirer_default_volumes + swift_object_expirer_extra_volumes }}"
    labels:
      service-component: "{{ service_name }}"
  when: inventory_hostname in groups['swift-object-server']

- name: Starting swift-proxy-server container
  become: true
  vars:
    service_name: "swift-proxy-server"
  kolla_docker:
    action: "start_container"
    common_options: "{{ docker_common_options }}"
    image: "{{ swift_proxy_server_image_full }}"
    name: "swift_proxy_server"
    volumes: "{{ swift_proxy_server_default_volumes + swift_proxy_server_extra_volumes }}"
    labels:
      service-component: "{{ service_name }}"
  when: inventory_hostname in groups['swift-proxy-server'] and
        run_start_swift_proxy_server | bool
